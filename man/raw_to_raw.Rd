% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/00-raw.R, R/01-bit-from-raw.R,
%   R/01-bit-to-raw.R, R/01-bit.R, R/08-bit-from-raw.R, R/08-bit-to-raw.R,
%   R/16-bit-from-raw.R, R/16-bit-to-raw.R, R/24-bit-from-raw.R,
%   R/24-bit-to-raw.R, R/32-bit-from-01-bit.R, R/32-bit-from-raw.R,
%   R/32-bit-to-01-bit.R, R/32-bit-to-raw.R
\name{raw_to_raw}
\alias{raw_to_raw}
\alias{raw_to_bit}
\alias{raw_to_logical}
\alias{raw_to_bitstring}
\alias{bit_to_raw}
\alias{logical_to_raw}
\alias{bitstring_to_raw}
\alias{bit_to_bitstring}
\alias{bit_to_logical}
\alias{bitstring_to_bit}
\alias{bitstring_to_logical}
\alias{logical_to_bit}
\alias{logical_to_bitstring}
\alias{raw_to_uint8}
\alias{raw_to_int8}
\alias{raw_to_hex8}
\alias{raw_to_chr}
\alias{raw_to_utf8}
\alias{uint8_to_raw}
\alias{int8_to_raw}
\alias{hex8_to_raw}
\alias{chr_to_raw}
\alias{utf8_to_raw}
\alias{raw_to_uint16}
\alias{raw_to_int16}
\alias{raw_to_hex16}
\alias{uint16_to_raw}
\alias{int16_to_raw}
\alias{hex16_to_raw}
\alias{raw_to_uint24}
\alias{raw_to_hex24}
\alias{uint24_to_raw}
\alias{hex24_to_raw}
\alias{bit_to_int32}
\alias{bitstring_to_int32}
\alias{logical_to_int32}
\alias{raw_to_int32}
\alias{int32_to_bit}
\alias{int32_to_bitstring}
\alias{int32_to_logical}
\alias{int32_to_raw}
\title{Convert the given type to a raw vector}
\usage{
raw_to_raw(raw_vec, ...)

raw_to_bit(raw_vec, first_bit = c("msb", "lsb"), ...)

raw_to_logical(raw_vec, first_bit = c("msb", "lsb"), ...)

raw_to_bitstring(raw_vec, first_bit = c("msb", "lsb"), ...)

bit_to_raw(bit_vec, first_bit = c("msb", "lsb"), pad = c("right",
  "left"), ...)

logical_to_raw(logical_vec, first_bit = c("msb", "lsb"),
  pad = c("right", "left"), ...)

bitstring_to_raw(bitstring, first_bit = c("msb", "lsb"),
  pad = c("right", "left"), ...)

bit_to_bitstring(bit_vec, ...)

bit_to_logical(bit_vec, ...)

bitstring_to_bit(bitstring, ...)

bitstring_to_logical(bitstring, ...)

logical_to_bit(logical_vec, ...)

logical_to_bitstring(logical_vec, ...)

raw_to_uint8(raw_vec, ...)

raw_to_int8(raw_vec, ...)

raw_to_hex8(raw_vec, ...)

raw_to_chr(raw_vec, ...)

raw_to_utf8(raw_vec, ...)

uint8_to_raw(uint8_vec, ...)

int8_to_raw(int8_vec, ...)

hex8_to_raw(hex8_vec, ...)

chr_to_raw(chr_vec, ...)

utf8_to_raw(utf8_vec, ...)

raw_to_uint16(raw_vec, endian = c("little", "big"), ...)

raw_to_int16(raw_vec, endian = c("little", "big"), ...)

raw_to_hex16(raw_vec, endian = c("little", "big"), ...)

uint16_to_raw(uint16_vec, endian = c("little", "big"), ...)

int16_to_raw(int16_vec, endian = c("little", "big"), ...)

hex16_to_raw(hex16_vec, endian = c("little", "big"), ...)

raw_to_uint24(raw_vec, endian = c("little", "big"), ...)

raw_to_hex24(raw_vec, endian = c("little", "big"), ...)

uint24_to_raw(uint24_vec, endian = c("little", "big"), ...)

hex24_to_raw(hex24_vec, endian = c("little", "big"), ...)

bit_to_int32(bit_vec, endian = c("little", "big"), first_bit = c("msb",
  "lsb"), pad = c("right", "left"), ...)

bitstring_to_int32(bitstring, endian = c("little", "big"),
  first_bit = c("msb", "lsb"), pad = c("right", "left"), ...)

logical_to_int32(logical_vec, endian = c("little", "big"),
  first_bit = c("msb", "lsb"), pad = c("right", "left"), ...)

raw_to_int32(raw_vec, endian = c("little", "big"), ...)

int32_to_bit(int32_vec, endian = c("little", "big"),
  first_bit = c("msb", "lsb"), ...)

int32_to_bitstring(int32_vec, endian = c("little", "big"),
  first_bit = c("msb", "lsb"), ...)

int32_to_logical(int32_vec, endian = c("little", "big"),
  first_bit = c("msb", "lsb"), ...)

int32_to_raw(int32_vec, endian = c("little", "big"), ...)
}
\arguments{
\item{raw_vec}{vector of raw bytes}

\item{...}{extra args passed through to core functions}

\item{first_bit}{'msb' or 'lsb'. default: 'msb'}

\item{bit_vec, bitstring, logical_vec}{vector of bit/logical type}

\item{pad}{'left' or 'right'. default: 'right'}

\item{uint8_vec, uint16_vec, uint24_vec}{vector of unsigned integer type}

\item{int8_vec, int16_vec, int32_vec}{vector of signed integer type}

\item{hex8_vec, hex16_vec, hex24_vec}{vector of hex representation type}

\item{chr_vec, utf8_vec}{vector of character type}

\item{endian}{'little' or 'big'. default: 'little'}
}
\description{
Convert the given type to a raw vector
}
